<QuerySet>
  <Query IsView="False" IsSP="False">
    <File>MT_DIGITAL_SUMMARY.sql</File>
    <Name>MT_DIGITAL_SUMMARY</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <SQL>select count(*)
  from cr_temp.GTT_MT_ONLINE_SUMMARY
  --10,886,943
  -- 9,653,267
 where 1=1
 ;
 
 select count(*)
  from cr_temp.gtt_agg_digital_summary
 where 1=1
 limit 1000;
 --10,813,214
 --10,368,812
 --10,368,812
 -- 9,232,241
 
 ;
 
 select count(*) from   cr_temp.GTT_MT_ONLINE_SUMMARY  
;
select count(*) from   cr_temp.gtt_agg_digital_summary
;
select count(*) from   prod.agg_digital_summary</SQL>
    <Name>Tab 2</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <Name>Tab 3</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <SQL>"Table Level rule:  One entry for each individual in the MT_ONLINE_ORD or MT_ONLINE_ITEM tables as well as any individuals in the data warehouse INDIVIDUAL_XOGRAPHIC table where 
DC_LAST_APS_ORD_DT is not null, and any individuals in the MT_ACCOUNT_NUMBER table where ACCT_PREFIX = 'PWI' and GROUP_ID in ('310','26401','26402','26403')."


;

select count(distinct individual_id) from (
select  individual_id 
from prod.agg_digital_summary)
where 1=1 and exists (select null from cr_temp.cdh_id_xref_noconsbaparts rmncbi where rmncbi.cdh_id = individual_id ) </SQL>
    <Name>Tab 4</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <SQL>;
drop table if exists  cr_temp.GTT_MT_ONLINE_ORD;
create table cr_temp.GTT_MT_ONLINE_ORD as
select 1 as icd_fl, null as cdh_fl,ICD_ID, cdh_id
/*--START--*/
, NVL2(ord_id, ord_id::text,'(NULL)') as ord_id
, NVL2(stat_cd, stat_cd::text,'(NULL)') as stat_cd
, NVL2(TO_CHAR(ord_dt,'DD-MON-YY'), TO_CHAR(ord_dt,'DD-MON-YY')::text,'(NULL)') as ord_dt
, NVL2(entr_typ_cd, entr_typ_cd::text,'(NULL)') as entr_typ_cd
, NVL2(TO_CHAR(pd_dt,'DD-MON-YY'), TO_CHAR(pd_dt,'DD-MON-YY')::text,'(NULL)') as pd_dt
, NVL2(trunc(nvl(pd_amt,'0')), trunc(nvl(pd_amt,'0'))::text,'(NULL)') as pd_amt
, NVL2(TO_CHAR(crt_dt,'DD-MON-YY'), TO_CHAR(crt_dt,'DD-MON-YY')::text,'(NULL)') as crt_dt
/*---END---*/

from cr_temp.MT_ONLINE_ORD T_MAIN  inner join crprod_cdh.cr_temp.cdh_id_xref_noconsbaparts on INDIVIDUAL_ID = ICD_ID ;

drop table if exists  cr_temp.gtt_agg_digital_order;
CREATE TABLE cr_temp.gtt_agg_digital_order AS
select null as icd_fl, 1 as cdh_fl,ICD_ID, cdh_id
/*--START--*/
, NVL2(ord_id, ord_id::text,'(NULL)') as ord_id
, NVL2(stat_cd, stat_cd::text,'(NULL)') as stat_cd
, NVL2(TO_CHAR(ord_dt,'DD-MON-YY'), TO_CHAR(ord_dt,'DD-MON-YY')::text,'(NULL)') as ord_dt
, NVL2(entr_typ_cd, entr_typ_cd::text,'(NULL)') as entr_typ_cd
, NVL2(TO_CHAR(pd_dt,'DD-MON-YY'), TO_CHAR(pd_dt,'DD-MON-YY')::text,'(NULL)') as pd_dt
, NVL2(trunc(nvl(pd_amt,'0')), trunc(nvl(pd_amt,'0'))::text,'(NULL)') as pd_amt
, NVL2(TO_CHAR(crt_dt,'DD-MON-YY'), TO_CHAR(crt_dt,'DD-MON-YY')::text,'(NULL)') as crt_dt
/*---END---*/
from prod.agg_digital_order T_MAIN               inner join crprod_cdh.cr_temp.cdh_id_xref_noconsbaparts on INDIVIDUAL_ID = CDH_ID ;



------------------------------------------------------------------------TABLE CREATION END\;
drop table if exists  cr_temp.diff_MT_ONLINE_ORD;
CREATE TABLE cr_temp.diff_MT_ONLINE_ORD AS
with hash_diff as (

select  COUNT(ICD_FL) as CNT_ICD_FL, COUNT(CDH_FL) as CNT_CDH_FL, ICD_ID, CDH_ID     , ord_id, stat_cd, ord_dt, entr_typ_cd, pd_dt, pd_amt, crt_dt
from (
select  ICD_ID, cdh_id, to_number(ICD_FL,9) as ICD_FL, to_number(CDH_FL,9) as CDH_FL , ord_id, stat_cd, ord_dt, entr_typ_cd, pd_dt, pd_amt, crt_dt
from cr_temp.GTT_MT_ONLINE_ORD
union all
select  ICD_ID, cdh_id, to_number(ICD_FL,9) as ICD_FL, to_number(CDH_FL,9) as CDH_FL , ord_id, stat_cd, ord_dt, entr_typ_cd, pd_dt, pd_amt, crt_dt
from cr_temp.gtt_agg_digital_order
)

group by ICD_ID, CDH_ID                                                              , ord_id, stat_cd, ord_dt, entr_typ_cd, pd_dt, pd_amt, crt_dt
having COUNT(ICD_FL)!=COUNT(CDH_FL)
order by ICD_ID, CDH_ID, COUNT(ICD_FL) desc, COUNT(CDH_FL) desc
)
select * from hash_diff hd
-- where exists (select null from xxxxxxxxxxxxxxxxxxxxxxxx fullmatch where hd.cdh_id = fullmatch.cdh_id)
;
select to_char(count(distinct icd_id),'FM999,999,999,990') as unique_icd_id, to_char(count(distinct cdh_id),'FM999,999,999,990') as unique_cdh_id
, to_char(count(*),'FM999,999,999,990') as rows_total_count, to_char(count(*)/2,'FM999,999,999,990') as rowshalf_total_count
, to_char((select count(*) from cr_temp.GTT_MT_ONLINE_ORD),'FM999,999,999,990') as total_ICD
, to_char((select count(*) from cr_temp.gtt_agg_digital_order),'FM999,999,999,990')  as total_CDH 
from cr_temp.diff_MT_ONLINE_ORD

;
drop table if exists cr_temp.comp_diff_MT_ONLINE_ORD;
CREATE TABLE cr_temp.comp_diff_MT_ONLINE_ORD AS
with icd as (select * from cr_temp.diff_MT_ONLINE_ORD where 1=1 and cnt_icd_fl = 1)
,    cdh as (select * from cr_temp.diff_MT_ONLINE_ORD where 1=1 and cnt_cdh_fl = 1)
select icd.cnt_icd_fl||cdh.cnt_cdh_fl as match_fl, nvl(icd.icd_id,cdh.icd_id) as icd_id ,cdh.cdh_id
, case when icd.ord_id = cdh.ord_id then '' else icd.ord_id||'&lt;&gt;'||cdh.ord_id /*#*/end ord_id_diff
, case when icd.stat_cd = cdh.stat_cd then '' else icd.stat_cd||'&lt;&gt;'||cdh.stat_cd /*#*/end stat_cd_diff
, case when icd.ord_dt = cdh.ord_dt then '' else icd.ord_dt||'&lt;&gt;'||cdh.ord_dt /*#*/end ord_dt_diff
, case when icd.entr_typ_cd = cdh.entr_typ_cd then '' else icd.entr_typ_cd||'&lt;&gt;'||cdh.entr_typ_cd /*#*/end entr_typ_cd_diff
, case when icd.pd_dt = cdh.pd_dt then '' else icd.pd_dt||'&lt;&gt;'||cdh.pd_dt /*#*/end pd_dt_diff
, case when icd.pd_amt = cdh.pd_amt then '' else icd.pd_amt||'&lt;&gt;'||cdh.pd_amt /*#*/end pd_amt_diff
, case when icd.crt_dt = cdh.crt_dt then '' else icd.crt_dt||'&lt;&gt;'||cdh.crt_dt /*#*/end crt_dt_diff

/*, '||                    ICD                    &gt;&gt;' as sep1/*, icd.* */*/
/*, '||                    CDH                    &gt;&gt;' as sep2/*, cdh.**/*/

from  icd full join cdh
on icd.icd_id = cdh.icd_id and icd.cdh_id = cdh.cdh_id
/*additional joins for PK*/
;
select 'MT_ONLINE_ORD' as icd_table_name, 'agg_digital_order' as cdh_table_name
, to_char(sum( case when ord_id_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/ord_id
, to_char(sum( case when stat_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/stat_cd
, to_char(sum( case when ord_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/ord_dt
, to_char(sum( case when entr_typ_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/entr_typ_cd
, to_char(sum( case when pd_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/pd_dt
, to_char(sum( case when pd_amt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/pd_amt
, to_char(sum( case when crt_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/crt_dt
from cr_temp.comp_diff_MT_ONLINE_ORD
;
select top 1000 * 

,  ord_id_diff
,  stat_cd_diff
,  ord_dt_diff
,  entr_typ_cd_diff
,  pd_dt_diff
,  pd_amt_diff
,  crt_dt_diff
from cr_temp.comp_diff_MT_ONLINE_ORD
 where 1=1 and ( 1=2
-- or ord_id_diff != ''
-- or stat_cd_diff != ''
-- or ord_dt_diff != ''
-- or entr_typ_cd_diff != ''
-- or pd_dt_diff != ''
-- or pd_amt_diff != ''
-- or crt_dt_diff != ''
)

;
------------------------------------------------------------------------RUN ALL ABOVE


;
select * from   cr_temp.GTT_MT_ONLINE_ORD  where icd_id = 00000000000000000000
;
select * from   cr_temp.gtt_agg_digital_order  where cdh_id = 00000000000000000000











</SQL>
    <Name>Tab 5</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <SQL>;
drop table if exists  cr_temp.GTT_MT_ONLINE_ITEM;
create table cr_temp.GTT_MT_ONLINE_ITEM as
select 1 as icd_fl, null as cdh_fl,ICD_ID, cdh_id
/*--START--*/

, NVL2(itm_id, itm_id::text,'(NULL)') as itm_id
, NVL2(ord_id, ord_id::text,'(NULL)') as ord_id, NVL2(seq_num, seq_num::text,'(NULL)') as seq_num
, NVL2(stat_cd, stat_cd::text,'(NULL)') as stat_cd
, NVL2(sku_num, sku_num::text,'(NULL)') as sku_num
, NVL2(trunc(nvl(tot_gross_amt,'0')), trunc(nvl(tot_gross_amt,'0'))::text,'(NULL)') as tot_gross_amt
, NVL2(trunc(nvl(tot_amt,'0')), trunc(nvl(tot_amt,'0'))::text,'(NULL)') as tot_amt
, NVL2(TO_CHAR(strt_dt,'DD-MON-YY'), TO_CHAR(strt_dt,'DD-MON-YY')::text,'(NULL)') as strt_dt
, NVL2(TO_CHAR(end_dt,'DD-MON-YY'), TO_CHAR(end_dt,'DD-MON-YY')::text,'(NULL)') as end_dt
, NVL2(mag_cd, mag_cd::text,'(NULL)') as mag_cd
, NVL2(crd_stat_cd, crd_stat_cd::text,'(NULL)') as crd_stat_cd
, NVL2(canc_flg, canc_flg::text,'(NULL)') as canc_flg
, NVL2(trunc(nvl(term_mth_cnt,'0')), trunc(nvl(term_mth_cnt,'0'))::text,'(NULL)') as term_mth_cnt
, NVL2(rnw_cd, rnw_cd::text,'(NULL)') as rnw_cd
, NVL2(set_cd, set_cd::text,'(NULL)') as set_cd
, NVL2(ext_keycd, ext_keycd::text,'(NULL)') as ext_keycd
, NVL2(int_keycd, int_keycd::text,'(NULL)') as int_keycd
, NVL2(canc_rsn_cd, canc_rsn_cd::text,'(NULL)') as canc_rsn_cd
, NVL2(shp_meth_cd, shp_meth_cd::text,'(NULL)') as shp_meth_cd
, NVL2(TO_CHAR(crt_dt,'DD-MON-YY'), TO_CHAR(crt_dt,'DD-MON-YY')::text,'(NULL)') as crt_dt
, NVL2(rpt_nam, rpt_nam::text,'(NULL)') as rpt_nam
, NVL2(sub_id, sub_id::text,'(NULL)') as sub_id
, NVL2(sub_rnw_ind, sub_rnw_ind::text,'(NULL)') as sub_rnw_ind
, NVL2(svc_stat_cd, svc_stat_cd::text,'(NULL)') as svc_stat_cd
, NVL2(TO_CHAR(canc_dt,'DD-MON-YY'), TO_CHAR(canc_dt,'DD-MON-YY')::text,'(NULL)') as canc_dt
, NVL2(TO_CHAR(pmt_dt,'DD-MON-YY'), TO_CHAR(pmt_dt,'DD-MON-YY')::text,'(NULL)') as pmt_dt
, NVL2(sub_src_cd, sub_src_cd::text,'(NULL)') as sub_src_cd
, NVL2(aps_src_cd, aps_src_cd::text,'(NULL)') as aps_src_cd
, NVL2(TO_CHAR(cro_acct_exp_dt,'DD-MON-YY'), TO_CHAR(cro_acct_exp_dt,'DD-MON-YY')::text,'(NULL)') as cro_acct_exp_dt
, NVL2(cancelled_by, cancelled_by::text,'(NULL)') as cancelled_by

/*---END---*/

from cr_temp.MT_ONLINE_ITEM T_MAIN  inner join crprod_cdh.cr_temp.cdh_id_xref_noconsbaparts on INDIVIDUAL_ID = ICD_ID ;

--drop table if exists  cr_temp.gtt_agg_digital_item;
--CREATE TABLE cr_temp.gtt_agg_digital_item AS
--select null as icd_fl, 1 as cdh_fl,ICD_ID, cdh_id
--/*--START--*/
--
--, NVL2(itm_id, itm_id::text,'(NULL)') as itm_id
--, NVL2(ord_id, ord_id::text,'(NULL)') as ord_id, NVL2(seq_num, seq_num::text,'(NULL)') as seq_num
--, NVL2(stat_cd, stat_cd::text,'(NULL)') as stat_cd
--, NVL2(sku_num, sku_num::text,'(NULL)') as sku_num
--, NVL2(trunc(nvl(tot_gross_amt,'0')), trunc(nvl(tot_gross_amt,'0'))::text,'(NULL)') as tot_gross_amt
--, NVL2(trunc(nvl(tot_amt,'0')), trunc(nvl(tot_amt,'0'))::text,'(NULL)') as tot_amt
--, NVL2(TO_CHAR(strt_dt,'DD-MON-YY'), TO_CHAR(strt_dt,'DD-MON-YY')::text,'(NULL)') as strt_dt
--, NVL2(TO_CHAR(end_dt,'DD-MON-YY'), TO_CHAR(end_dt,'DD-MON-YY')::text,'(NULL)') as end_dt
--, NVL2(mag_cd, mag_cd::text,'(NULL)') as mag_cd
--, NVL2(crd_stat_cd, crd_stat_cd::text,'(NULL)') as crd_stat_cd
--, NVL2(canc_flg, canc_flg::text,'(NULL)') as canc_flg
--, NVL2(trunc(nvl(term_mth_cnt,'0')), trunc(nvl(term_mth_cnt,'0'))::text,'(NULL)') as term_mth_cnt
--, NVL2(rnw_cd, rnw_cd::text,'(NULL)') as rnw_cd
--, NVL2(set_cd, set_cd::text,'(NULL)') as set_cd
--, NVL2(ext_keycd, ext_keycd::text,'(NULL)') as ext_keycd
--, NVL2(int_keycd, int_keycd::text,'(NULL)') as int_keycd
--, NVL2(canc_rsn_cd, canc_rsn_cd::text,'(NULL)') as canc_rsn_cd
--, NVL2(shp_meth_cd, shp_meth_cd::text,'(NULL)') as shp_meth_cd
--, NVL2(TO_CHAR(crt_dt,'DD-MON-YY'), TO_CHAR(crt_dt,'DD-MON-YY')::text,'(NULL)') as crt_dt
--, NVL2(rpt_nam, rpt_nam::text,'(NULL)') as rpt_nam
--, NVL2(sub_id, sub_id::text,'(NULL)') as sub_id
--, NVL2(sub_rnw_ind, sub_rnw_ind::text,'(NULL)') as sub_rnw_ind
--, NVL2(svc_stat_cd, svc_stat_cd::text,'(NULL)') as svc_stat_cd
--, NVL2(TO_CHAR(canc_dt,'DD-MON-YY'), TO_CHAR(canc_dt,'DD-MON-YY')::text,'(NULL)') as canc_dt
--, NVL2(TO_CHAR(pmt_dt,'DD-MON-YY'), TO_CHAR(pmt_dt,'DD-MON-YY')::text,'(NULL)') as pmt_dt
--, NVL2(sub_src_cd, sub_src_cd::text,'(NULL)') as sub_src_cd
--, NVL2(aps_src_cd, aps_src_cd::text,'(NULL)') as aps_src_cd
--, NVL2(TO_CHAR(cro_acct_exp_dt,'DD-MON-YY'), TO_CHAR(cro_acct_exp_dt,'DD-MON-YY')::text,'(NULL)') as cro_acct_exp_dt
--, NVL2(cancelled_by, cancelled_by::text,'(NULL)') as cancelled_by
--
--/*---END---*/
--from prod.agg_digital_item T_MAIN               inner join crprod_cdh.cr_temp.cdh_id_xref_noconsbaparts on INDIVIDUAL_ID = CDH_ID ;



------------------------------------------------------------------------TABLE CREATION END\;
drop table if exists  cr_temp.diff_MT_ONLINE_ITEM;
CREATE TABLE cr_temp.diff_MT_ONLINE_ITEM AS
with hash_diff as (

select  COUNT(ICD_FL) as CNT_ICD_FL, COUNT(CDH_FL) as CNT_CDH_FL, ICD_ID, CDH_ID     , itm_id, ord_id, seq_num, stat_cd, sku_num, tot_gross_amt, tot_amt, strt_dt, end_dt, mag_cd, crd_stat_cd, canc_flg, term_mth_cnt, rnw_cd, set_cd, ext_keycd, int_keycd, canc_rsn_cd, shp_meth_cd, crt_dt, rpt_nam, sub_id, sub_rnw_ind, svc_stat_cd, canc_dt, pmt_dt, sub_src_cd, aps_src_cd, cro_acct_exp_dt, cancelled_by
from (
select  ICD_ID, cdh_id, to_number(ICD_FL,9) as ICD_FL, to_number(CDH_FL,9) as CDH_FL , itm_id, ord_id, seq_num, stat_cd, sku_num, tot_gross_amt, tot_amt, strt_dt, end_dt, mag_cd, crd_stat_cd, canc_flg, term_mth_cnt, rnw_cd, set_cd, ext_keycd, int_keycd, canc_rsn_cd, shp_meth_cd, crt_dt, rpt_nam, sub_id, sub_rnw_ind, svc_stat_cd, canc_dt, pmt_dt, sub_src_cd, aps_src_cd, cro_acct_exp_dt, cancelled_by
from cr_temp.GTT_MT_ONLINE_ITEM
union all
select  ICD_ID, cdh_id, to_number(ICD_FL,9) as ICD_FL, to_number(CDH_FL,9) as CDH_FL , itm_id, ord_id, seq_num, stat_cd, sku_num, tot_gross_amt, tot_amt, strt_dt, end_dt, mag_cd, crd_stat_cd, canc_flg, term_mth_cnt, rnw_cd, set_cd, ext_keycd, int_keycd, canc_rsn_cd, shp_meth_cd, crt_dt, rpt_nam, sub_id, sub_rnw_ind, svc_stat_cd, canc_dt, pmt_dt, sub_src_cd, aps_src_cd, cro_acct_exp_dt, cancelled_by
from cr_temp.gtt_agg_digital_item
)

group by ICD_ID, CDH_ID                                                              , itm_id, ord_id, seq_num, stat_cd, sku_num, tot_gross_amt, tot_amt, strt_dt, end_dt, mag_cd, crd_stat_cd, canc_flg, term_mth_cnt, rnw_cd, set_cd, ext_keycd, int_keycd, canc_rsn_cd, shp_meth_cd, crt_dt, rpt_nam, sub_id, sub_rnw_ind, svc_stat_cd, canc_dt, pmt_dt, sub_src_cd, aps_src_cd, cro_acct_exp_dt, cancelled_by
having COUNT(ICD_FL)!=COUNT(CDH_FL)
order by ICD_ID, CDH_ID, COUNT(ICD_FL) desc, COUNT(CDH_FL) desc
)
select * from hash_diff hd
-- where exists (select null from xxxxxxxxxxxxxxxxxxxxxxxx fullmatch where hd.cdh_id = fullmatch.cdh_id)
;
select to_char(count(distinct icd_id),'FM999,999,999,990') as unique_icd_id, to_char(count(distinct cdh_id),'FM999,999,999,990') as unique_cdh_id
, to_char(count(*),'FM999,999,999,990') as rows_total_count, to_char(count(*)/2,'FM999,999,999,990') as rowshalf_total_count
, to_char((select count(*) from cr_temp.GTT_MT_ONLINE_ITEM),'FM999,999,999,990') as total_ICD
, to_char((select count(*) from cr_temp.gtt_agg_digital_item),'FM999,999,999,990')  as total_CDH 
from cr_temp.diff_MT_ONLINE_ITEM

;
drop table if exists cr_temp.comp_diff_MT_ONLINE_ITEM;
CREATE TABLE cr_temp.comp_diff_MT_ONLINE_ITEM AS
with icd as (select * from cr_temp.diff_MT_ONLINE_ITEM where 1=1 and cnt_icd_fl = 1)
,    cdh as (select * from cr_temp.diff_MT_ONLINE_ITEM where 1=1 and cnt_cdh_fl = 1)
select icd.cnt_icd_fl||cdh.cnt_cdh_fl as match_fl, nvl(icd.icd_id,cdh.icd_id) as icd_id ,cdh.cdh_id

, case when icd.itm_id = cdh.itm_id then '' else icd.itm_id||'&lt;&gt;'||cdh.itm_id /*#*/end itm_id_diff
, case when icd.ord_id = cdh.ord_id then '' else icd.ord_id||'&lt;&gt;'||cdh.ord_id /*#*/end ord_id_diff, case when icd.seq_num = cdh.seq_num then '' else icd.seq_num||'&lt;&gt;'||cdh.seq_num /*#*/end seq_num_diff
, case when icd.stat_cd = cdh.stat_cd then '' else icd.stat_cd||'&lt;&gt;'||cdh.stat_cd /*#*/end stat_cd_diff
, case when icd.sku_num = cdh.sku_num then '' else icd.sku_num||'&lt;&gt;'||cdh.sku_num /*#*/end sku_num_diff
, case when icd.tot_gross_amt = cdh.tot_gross_amt then '' else icd.tot_gross_amt||'&lt;&gt;'||cdh.tot_gross_amt /*#*/end tot_gross_amt_diff
, case when icd.tot_amt = cdh.tot_amt then '' else icd.tot_amt||'&lt;&gt;'||cdh.tot_amt /*#*/end tot_amt_diff
, case when icd.strt_dt = cdh.strt_dt then '' else icd.strt_dt||'&lt;&gt;'||cdh.strt_dt /*#*/end strt_dt_diff
, case when icd.end_dt = cdh.end_dt then '' else icd.end_dt||'&lt;&gt;'||cdh.end_dt /*#*/end end_dt_diff
, case when icd.mag_cd = cdh.mag_cd then '' else icd.mag_cd||'&lt;&gt;'||cdh.mag_cd /*#*/end mag_cd_diff
, case when icd.crd_stat_cd = cdh.crd_stat_cd then '' else icd.crd_stat_cd||'&lt;&gt;'||cdh.crd_stat_cd /*#*/end crd_stat_cd_diff
, case when icd.canc_flg = cdh.canc_flg then '' else icd.canc_flg||'&lt;&gt;'||cdh.canc_flg /*#*/end canc_flg_diff
, case when icd.term_mth_cnt = cdh.term_mth_cnt then '' else icd.term_mth_cnt||'&lt;&gt;'||cdh.term_mth_cnt /*#*/end term_mth_cnt_diff
, case when icd.rnw_cd = cdh.rnw_cd then '' else icd.rnw_cd||'&lt;&gt;'||cdh.rnw_cd /*#*/end rnw_cd_diff
, case when icd.set_cd = cdh.set_cd then '' else icd.set_cd||'&lt;&gt;'||cdh.set_cd /*#*/end set_cd_diff
, case when icd.ext_keycd = cdh.ext_keycd then '' else icd.ext_keycd||'&lt;&gt;'||cdh.ext_keycd /*#*/end ext_keycd_diff
, case when icd.int_keycd = cdh.int_keycd then '' else icd.int_keycd||'&lt;&gt;'||cdh.int_keycd /*#*/end int_keycd_diff
, case when icd.canc_rsn_cd = cdh.canc_rsn_cd then '' else icd.canc_rsn_cd||'&lt;&gt;'||cdh.canc_rsn_cd /*#*/end canc_rsn_cd_diff
, case when icd.shp_meth_cd = cdh.shp_meth_cd then '' else icd.shp_meth_cd||'&lt;&gt;'||cdh.shp_meth_cd /*#*/end shp_meth_cd_diff
, case when icd.crt_dt = cdh.crt_dt then '' else icd.crt_dt||'&lt;&gt;'||cdh.crt_dt /*#*/end crt_dt_diff
, case when icd.rpt_nam = cdh.rpt_nam then '' else icd.rpt_nam||'&lt;&gt;'||cdh.rpt_nam /*#*/end rpt_nam_diff
, case when icd.sub_id = cdh.sub_id then '' else icd.sub_id||'&lt;&gt;'||cdh.sub_id /*#*/end sub_id_diff
, case when icd.sub_rnw_ind = cdh.sub_rnw_ind then '' else icd.sub_rnw_ind||'&lt;&gt;'||cdh.sub_rnw_ind /*#*/end sub_rnw_ind_diff
, case when icd.svc_stat_cd = cdh.svc_stat_cd then '' else icd.svc_stat_cd||'&lt;&gt;'||cdh.svc_stat_cd /*#*/end svc_stat_cd_diff
, case when icd.canc_dt = cdh.canc_dt then '' else icd.canc_dt||'&lt;&gt;'||cdh.canc_dt /*#*/end canc_dt_diff
, case when icd.pmt_dt = cdh.pmt_dt then '' else icd.pmt_dt||'&lt;&gt;'||cdh.pmt_dt /*#*/end pmt_dt_diff
, case when icd.sub_src_cd = cdh.sub_src_cd then '' else icd.sub_src_cd||'&lt;&gt;'||cdh.sub_src_cd /*#*/end sub_src_cd_diff
, case when icd.aps_src_cd = cdh.aps_src_cd then '' else icd.aps_src_cd||'&lt;&gt;'||cdh.aps_src_cd /*#*/end aps_src_cd_diff
, case when icd.cro_acct_exp_dt = cdh.cro_acct_exp_dt then '' else icd.cro_acct_exp_dt||'&lt;&gt;'||cdh.cro_acct_exp_dt /*#*/end cro_acct_exp_dt_diff
, case when icd.cancelled_by = cdh.cancelled_by then '' else icd.cancelled_by||'&lt;&gt;'||cdh.cancelled_by /*#*/end cancelled_by_diff


/*, '||                    ICD                    &gt;&gt;' as sep1/*, icd.* */*/
/*, '||                    CDH                    &gt;&gt;' as sep2/*, cdh.**/*/

from  icd full join cdh
on icd.icd_id = cdh.icd_id and icd.cdh_id = cdh.cdh_id
/*additional joins for PK*/
;
select 'MT_ONLINE_ITEM' as icd_table_name, 'agg_digital_item' as cdh_table_name

, to_char(sum( case when itm_id_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/itm_id
, to_char(sum( case when ord_id_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/ord_id, to_char(sum( case when seq_num_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/seq_num
, to_char(sum( case when stat_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/stat_cd
, to_char(sum( case when sku_num_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/sku_num
, to_char(sum( case when tot_gross_amt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/tot_gross_amt
, to_char(sum( case when tot_amt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/tot_amt
, to_char(sum( case when strt_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/strt_dt
, to_char(sum( case when end_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/end_dt
, to_char(sum( case when mag_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/mag_cd
, to_char(sum( case when crd_stat_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/crd_stat_cd
, to_char(sum( case when canc_flg_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/canc_flg
, to_char(sum( case when term_mth_cnt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/term_mth_cnt
, to_char(sum( case when rnw_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/rnw_cd
, to_char(sum( case when set_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/set_cd
, to_char(sum( case when ext_keycd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/ext_keycd
, to_char(sum( case when int_keycd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/int_keycd
, to_char(sum( case when canc_rsn_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/canc_rsn_cd
, to_char(sum( case when shp_meth_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/shp_meth_cd
, to_char(sum( case when crt_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/crt_dt
, to_char(sum( case when rpt_nam_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/rpt_nam
, to_char(sum( case when sub_id_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/sub_id
, to_char(sum( case when sub_rnw_ind_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/sub_rnw_ind
, to_char(sum( case when svc_stat_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/svc_stat_cd
, to_char(sum( case when canc_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/canc_dt
, to_char(sum( case when pmt_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/pmt_dt
, to_char(sum( case when sub_src_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/sub_src_cd
, to_char(sum( case when aps_src_cd_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/aps_src_cd
, to_char(sum( case when cro_acct_exp_dt_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/cro_acct_exp_dt
, to_char(sum( case when cancelled_by_diff = '' then 0 else 1 end) -1,'FM999,999,999,990') as /*#*/cancelled_by

from cr_temp.comp_diff_MT_ONLINE_ITEM
;
select top 1000 * 


,  itm_id_diff
,  ord_id_diff,  seq_num_diff
,  stat_cd_diff
,  sku_num_diff
,  tot_gross_amt_diff
,  tot_amt_diff
,  strt_dt_diff
,  end_dt_diff
,  mag_cd_diff
,  crd_stat_cd_diff
,  canc_flg_diff
,  term_mth_cnt_diff
,  rnw_cd_diff
,  set_cd_diff
,  ext_keycd_diff
,  int_keycd_diff
,  canc_rsn_cd_diff
,  shp_meth_cd_diff
,  crt_dt_diff
,  rpt_nam_diff
,  sub_id_diff
,  sub_rnw_ind_diff
,  svc_stat_cd_diff
,  canc_dt_diff
,  pmt_dt_diff
,  sub_src_cd_diff
,  aps_src_cd_diff
,  cro_acct_exp_dt_diff
,  cancelled_by_diff

from cr_temp.comp_diff_MT_ONLINE_ITEM
 where 1=1 and ( 1=2

 or itm_id_diff != ''
-- or ord_id_diff != ''-- or seq_num_diff != ''
-- or stat_cd_diff != ''
-- or sku_num_diff != ''
-- or tot_gross_amt_diff != ''
-- or tot_amt_diff != ''
-- or strt_dt_diff != ''
-- or end_dt_diff != ''
-- or mag_cd_diff != ''
-- or crd_stat_cd_diff != ''
-- or canc_flg_diff != ''
-- or term_mth_cnt_diff != ''
-- or rnw_cd_diff != ''
-- or set_cd_diff != ''
-- or ext_keycd_diff != ''
-- or int_keycd_diff != ''
-- or canc_rsn_cd_diff != ''
-- or shp_meth_cd_diff != ''
-- or crt_dt_diff != ''
-- or rpt_nam_diff != ''
-- or sub_id_diff != ''
-- or sub_rnw_ind_diff != ''
-- or svc_stat_cd_diff != ''
-- or canc_dt_diff != ''
-- or pmt_dt_diff != ''
-- or sub_src_cd_diff != ''
-- or aps_src_cd_diff != ''
-- or cro_acct_exp_dt_diff != ''
-- or cancelled_by_diff != ''

)

;
------------------------------------------------------------------------RUN ALL ABOVE


;
select * from   cr_temp.GTT_MT_ONLINE_ITEM  where icd_id = 00000000000000000000
;
select * from   cr_temp.gtt_agg_digital_item  where cdh_id = 00000000000000000000










;
select count(*)
  from cr_temp.MT_ONLINE_ITEM
 where 1=1
 limit 1000;</SQL>
    <Name>Tab 6</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <SQL>select count(*)
from prod.agg_digital_item



;


truncate table prod.agg_digital_item</SQL>
    <Name>Tab 7</Name>
  </Query>
  <Query IsView="False" IsSP="False">
    <SQL>/***************************************************************************
*            (C) Copyright Acxiom Corporation 2006
*                    All Rights Reserved.
*--------------------------------------------------------------------------
* Project:      Consumers Union Acxiom Database Solution - Middle Tier ETL
* Module Name:  mt_fr_summary.sql
* Date:         3/30/2006
***************************************************************************/

DROP TABLE IF EXISTS    cr_temp.fundraising_donation_raw_temp;
CREATE TABLE            cr_temp.fundraising_donation_raw_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
(select individual_id
            ,keycode
            ,don_dt
      from  prod.agg_fundraising_donation
      where don_amt &gt; 0
        and don_cd = 'C3');


DROP TABLE IF EXISTS    cr_temp.fundraising_promo_raw_temp;
CREATE TABLE            cr_temp.fundraising_promo_raw_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
select individual_id
            ,prom_dt
            ,keycode
            ,chnl_cd
            ,bus_unt
     from  prod.agg_promotion
     where bus_unt = 'FUN';


DROP TABLE IF EXISTS    cr_temp.fundraising_don_agg1_temp;
CREATE TABLE            cr_temp.fundraising_don_agg1_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
with fd as (SELECT
        individual_id,
        don_dt,
        don_gross_amt,
        don_amt,
        keycode,
        rf_amt
      FROM prod.agg_fundraising_donation
      WHERE don_cd = 'C3' and
         (don_gross_amt !=0
         OR don_amt != 0)
    )
,   fd_amt_gt0 as (SELECT
        individual_id,
        max(CASE WHEN rec_nbr = 2
                 THEN don_amt
                 ELSE null
            END) fr_prior_don_amt,
        max(CASE WHEN rec_nbr = 2
                 THEN don_dt
                 ELSE null
            END) fr_prior_don_dt,
        extract(days from ((max(don_dt) - nvl(max(don_brk),min(don_dt)))/365)) fr_times_ren_cnt
      FROM
      ( SELECT
          individual_id,
          don_dt,
          don_amt,
          row_number() OVER (PARTITION BY individual_id ORDER BY don_dt DESC nulls last) rec_nbr,
          CASE WHEN (add_months(don_dt,-13) &gt; lead(don_dt,1)
                                                   OVER (PARTITION BY individual_id
                                                         ORDER BY don_dt DESC nulls last))
               THEN don_dt
               ELSE null
          END don_brk
        FROM prod.agg_fundraising_donation
        WHERE don_cd = 'C3' and
           (don_gross_amt !=0
           OR don_amt != 0)
           AND don_amt &gt; 0
      )
      group by individual_id
    )
, fd_don_ind0 as (SELECT
        individual_id
      FROM prod.agg_fundraising_donation
      WHERE
        SUBSTRING(KEYCODE,2,1) in ('2','3')
        AND months_between(sysdate, don_dt) &lt;= 36
        AND don_ind = 0
      group by individual_id
    )
, fctr as (select mfd.individual_id
     from cr_temp.fundraising_donation_raw_temp         mfd
         ,cr_temp.fundraising_promo_raw_temp           mp
--         ,fr_conv_tag_hist            fcth
     where
       (
            mfd.individual_id = mp.individual_id
        and mp.prom_dt &lt; to_date('20120601','yyyymmdd')
--        and mp.keycode = fcth.keycode
--        and mp.chnl_cd = fcth.chnl_cd
        and mfd.keycode = mp.keycode
        and mfd.don_dt &gt;= mp.prom_dt
       )
     union
     select mfd.individual_id
     from cr_temp.fundraising_donation_raw_temp         mfd
         ,cr_temp.fundraising_promo_raw_temp           mp
         ,prod.agg_target_analytics         mta
     where
       (
        (    REGEXP_SUBSTR(mta.tag_scr, '[A-Za-z]+') = mta.tag_scr
         and mfd.individual_id = mta.individual_id
        )
        and
        (    mfd.individual_id = mp.individual_id
         and mp.prom_dt &gt;= to_date('20120601','yyyymmdd')
         and
         (
          (    mp.chnl_cd = 'D'
           and SUBSTRING(mfd.keycode,2,1) = '7'
          )
          or
          (    mp.chnl_cd = 'E'
           and SUBSTRING(mp.keycode,2,1) = '0'
           and SUBSTRING(mp.keycode,3,1) = '6'
          )
         )
         and mfd.keycode = mp.keycode
         and mfd.don_dt &gt;= mp.prom_dt
        )
       )
    group by mfd.individual_id)

SELECT
  fd.individual_id,
  round(avg(CASE WHEN fd.don_amt = 0
                 THEN null
                 ELSE fd.don_amt
            END),2) fr_avg_don_amt,
  round(avg(CASE WHEN fd.don_gross_amt = 0
                 THEN null
                 ELSE fd.don_gross_amt
            END),2) fr_avg_gross_don_amt,
  (SUBSTRING(max(CASE WHEN fd.don_amt &gt; 0
                            THEN nvl(to_char(fd.don_dt,'YYYYMMDD'),'00010101') ||
                                 fd.don_amt
                            ELSE null
                       END),9)) fr_lst_don_amt,
  sum(fd.don_amt) fr_ltd_don_amt,
  max(fd.don_amt) fr_max_don_amt,
  sum(CASE WHEN fd.don_dt &gt;= add_months(sysdate,-6)
           THEN fd.don_amt
           ELSE null
      END) fr_1_6_mth_don_amt,
  sum(CASE WHEN fd.don_dt &gt;= add_months(sysdate,-24)
            AND fd.don_dt &lt; add_months(sysdate,-12)
           THEN fd.don_amt
           ELSE null
      END) fr_13_24_mth_don_amt,
  sum(CASE WHEN fd.don_dt &gt;= add_months(sysdate,-36)
            AND fd.don_dt &lt; add_months(sysdate,-24)
           THEN fd.don_amt
           ELSE null
      END) fr_25_36_mth_don_amt,
  sum(CASE WHEN fd.don_dt &lt; add_months(sysdate,-36)
           THEN fd.don_amt
           ELSE null
      END) fr_37_plus_mth_don_amt,
  sum(CASE WHEN fd.don_dt &gt;= add_months(sysdate,-12)
            AND fd.don_dt &lt; add_months(sysdate,-6)
           THEN fd.don_amt
           ELSE null
      END) fr_7_12_mth_don_amt,
  max(fd_amt_gt0.fr_prior_don_amt) fr_prior_don_amt,
  min(case when fd.don_amt &gt; 0 then fd.don_dt end) fr_fst_don_dt,
  max(case when fd.don_amt &gt; 0 then fd.don_dt end) fr_lst_don_dt,
  max(fd_amt_gt0.fr_prior_don_dt) fr_prior_don_dt,
  max(CASE WHEN fd.don_dt &gt;= add_months(sysdate,-12)
            AND fd.don_amt &gt; 0
           THEN 'Y'
           ELSE 'N'
      END) fr_dnr_act_flg,
  CASE WHEN max(CASE WHEN fd.don_amt &gt; 0
                     THEN fd.don_dt
                     ELSE null
                END) &lt; add_months(sysdate,-24)
       THEN 'Y'
       ELSE 'N'
  END fr_dnr_inact_flg,
  CASE WHEN max(CASE WHEN fd.don_amt &gt; 0
                     THEN fd.don_dt
                     ELSE null
                END) BETWEEN add_months(sysdate,-24)
                         AND add_months(sysdate,-12)
       THEN 'Y'
       ELSE 'N'
  END fr_dnr_lps_flg,
  decode(max(CASE WHEN fd.don_dt &gt; add_months(sysdate,-12)
                  THEN CASE WHEN fd.don_amt &gt;= 1000
                            THEN '4'
                            WHEN fd.don_amt &gt;= 500
                            THEN '3'
                            WHEN fd.don_amt &gt;= 250
                            THEN '2'
                            WHEN fd.don_amt &gt;= 100
                            THEN '1'
                            ELSE null
                       END
                  ELSE null
             END),
         '4','C',
         '3','P',
         '2','G',
         '1','S',
         null) fr_mbr_gvng_lvl_cd,
  add_months(
     to_date(
        SUBSTRING(
           max(
               CASE WHEN fd.don_dt &gt; add_months(sysdate,-12)
                     AND fd.don_amt &gt;= 100
                    THEN lpad(cast(trunc(100*fd.don_amt) as text),10,'0')||
                         to_char(fd.don_dt,'YYYYMMDD')
                    ELSE null
                END)
              ,11)
            ,'YYYYMMDD')
           ,12) fr_mbr_exp_dt,
  min(CASE WHEN nvl(fd.keycode,'0000000000') != '0000000000'
            AND fd.don_amt &gt; 0
           THEN nvl(to_char(fd.don_dt,'YYYYMMDD'),'99999999') ||
                fd.keycode
           ELSE null
      END) fst_don_dt_keycode,
  max(CASE WHEN nvl(fd.keycode,'0000000000') != '0000000000'
            AND fd.don_amt &gt; 0
           THEN nvl(to_char(fd.don_dt,'YYYYMMDD'),'00010101') ||
                fd.keycode
           ELSE null
      END) lst_don_dt_keycode,
  count(CASE WHEN fd.don_amt &gt; 0
             THEN 1
             ELSE null
        END) fr_ltd_don_cnt,
  count(CASE WHEN fd.rf_amt &gt; 0
             THEN 1
             ELSE null
        END) fr_don_ref_cnt,
  max(fd_amt_gt0.fr_times_ren_cnt) fr_times_ren_cnt,
  SUBSTRING(max(CASE WHEN fd.don_amt &gt; 0
                   AND nvl(fd.keycode,'0000000000') != '0000000000'
                  THEN nvl(to_char(fd.don_dt,'YYYYMMDD'),'00010101') || fd.keycode
                  ELSE null
              END),10,1) fr_lst_don_src_cd,
  SUBSTRING(max(case when don_gross_amt &gt; 0 and don_amt &gt; 0 and SUBSTRING(fd.keycode, 2, 1) in ('2','3','6') then
                      nvl(to_char(don_dt, 'YYYYMMDD'), '00010101') ||  don_amt
                    end)
  , 9)
    as fr_lst_rfl_don_amt,
  SUBSTRING(max(case when don_gross_amt &gt; 0 and don_amt &gt; 0
                   and SUBSTRING(fd.keycode, 2, 1) in ('0','1','4','5','7','8','9')
                   and fd.keycode != '0000000000'
            then nvl(to_char(don_dt, 'YYYYMMDD'), '00010101') ||  don_amt
                 end)
  , 9)
    as fr_lst_non_rfl_don_amt,
  CASE WHEN max(don_dt) &gt; add_months(sysdate,-36)
         THEN CASE WHEN sum(don_amt) between 225 and 999
                        or (sum(don_amt) between 150 and 225
                            and max(don_amt) &gt;= 50)
                        or (sum(don_amt) between 125 and 225
                            and max(don_amt) &gt;= 75)
                        or (sum(don_amt) between 100 and 225
                            and max(don_amt) &gt;= 100)
                     THEN 'Y'
                   ELSE 'N'
              END
       ELSE 'N'
  END fr_tof_cd,
  CASE WHEN sum(case when don_dt &lt;= to_date('20050531','YYYYMMDD')
                       then don_amt else 0 end) &gt;= 1000
            and nvl(max(fm.membership_flag),'X') != 'D'
         THEN 'Y'
       WHEN max(fm.membership_flag) = 'A'
         THEN 'Y'
       ELSE 'N'
  END FR_LT_DNR_FLG,
  SUBSTRING(min(case when fd.KEYCODE is not null and fd.KEYCODE != '0000000000' and DON_AMT &gt; 0
    then nvl(to_char(don_dt, 'YYYYMMDD'), '99999999') || fd.keycode
       end)
  , 9)
    as FR_FST_DON_KEYCODE,
  max(case when months_between(sysdate, fd.don_dt) &lt;= 12 then fd.don_amt end) FR_MAX_DON_AMT_12_MTH,
  max(case when months_between(sysdate, fd.don_dt) &lt;= 24 then fd.don_amt end) FR_MAX_DON_AMT_24_MTH,
  max(case when months_between(sysdate, fd.don_dt) &lt;= 36 then fd.don_amt end) FR_MAX_DON_AMT_36_MTH,
  NULL as FR_LST_GUARDIAN_DON_DT,
  case when max(case when months_between(sysdate, fd.don_dt) &lt;= 36 then fd.don_amt end) between 50 and 99.99
    then 'Y' else 'N' end FR_BRIDGE_PROGRAM_FLG,
  case when max(au.NON_PROM_CU_FR_RFL_FLG)  = 'Y'
       then '1'
       when count(case when SUBSTRING(fd.KEYCODE,2,1) in ('1','5','7') and months_between(sysdate, fd.don_dt) &lt;= 36 and fd.DON_AMT &gt; 0 then 1 end) &gt; 0
         AND count(case when SUBSTRING(fd.KEYCODE,2,1) in ('0','2','3','4','6','8','9') and months_between(sysdate, fd.don_dt) &lt;= 36
                   and fd.DON_AMT &gt; 0 then 1 end) = 0
         AND max(fd_don_ind0.individual_id) is null
         AND months_between(sysdate, min(case when fd.don_amt &gt; 0 then fd.don_dt end)) &gt; 12
       then '2'
       when count(case when SUBSTRING(fd.KEYCODE,2,1) in ('1','5','7') and months_between(sysdate, fd.don_dt) &lt;= 36 and fd.DON_AMT &gt; 0 then 1 end) &gt;= 2
         OR count(case when SUBSTRING(fd.KEYCODE,2,1) in ('1','7') and months_between(sysdate, fd.don_dt) &lt;= 12 and fd.DON_AMT &gt; 0 then 1 end) &gt; 0
       then '3'
       when count(case when SUBSTRING(fd.KEYCODE,2,1) in ('2','3') and months_between(sysdate, fd.don_dt) &lt;= 36 and fd.DON_AMT &gt; 0 then 1 end) &gt; 0
         AND count(case when SUBSTRING(fd.KEYCODE,2,1) in ('0','1','4','5','6','7','8','9') and months_between(sysdate, fd.don_dt) &lt;= 36
                   and fd.DON_AMT &gt; 0 then 1 end) = 0
         AND months_between(sysdate, min(case when fd.don_amt &gt; 0 then fd.don_dt end)) &gt; 12
       then '4'
       when count(case when months_between(sysdate, fd.don_dt) &lt;= 36 and fd.DON_AMT &gt; 0 then 1 end) &gt; 0
       then '5'
    end FR_TRACK_NUMBER,
  max(case when fctr.individual_id is null then 'N' else 'Y' end)     FR_CONV_TAG_RSP_FLG,
  SUBSTRING(min( case when fd.don_amt &gt; 0
                             then nvl(to_char(fd.don_dt,'yyyymmdd'),'99991231') ||
                                 fd.don_amt end),9) FR_FST_DON_AMT
FROM
                                                                fd 
    left join prod.fundraising_membership                       fm 
        on fd.individual_id = fm.individual_id
    left join                                                   fd_amt_gt0
        on fd.individual_id = fd_amt_gt0.individual_id
    left join                                                   fd_don_ind0
        on fd.individual_id = fd_don_ind0.individual_id
    left join prod.agg_preference_summary                       au
        on fd.individual_id = au.individual_id
    left join                                                   fctr
        on fd.individual_id = fctr.individual_id
    /*left join FR_GUARDIAN_KEYCODES                            gk
        on SUBSTRING(fd.keycode, 1, 9) = gk.keycode  --SD: table is deprecated*/

GROUP BY fd.individual_id
;

DROP TABLE IF EXISTS    cr_temp.mt_fs_lt_pldg_temp;
CREATE TABLE            cr_temp.mt_fs_lt_pldg_temp AS
SELECT   null as individual_id                   --SD 20171006: Pledges are deprecated
       , 0    as fr_lst_lt_pldg_amt
       , 0    as lt_pldg_amt
       , 0    as lt_1_6_pldg_amt
       , 0    as lt_13_24_pldg_amt
       , 0    as lt_25_36_pldg_amt
       , 0    as lt_37_pldg_amt
       , 0    as lt_7_12_pldg_amt
       , null as fr_lst_lt_pldg_pmt_dt
       , null as fr_lst_lt_pldg_dt
       , null as fst_lt_pldg_dt_keycode
       , null as lst_lt_pldg_dt_keycode
       , null as fr_lt_pldg_opn_flg
       , 0    as lt_pldg_cnt
       , null as fr_fst_lt_pldg_dt
;


DROP TABLE IF EXISTS    cr_temp.mt_fs_prior_keycode_temp;
CREATE TABLE            cr_temp.mt_fs_prior_keycode_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT individual_id,
       keycode fr_prior_act_keycode
FROM
    (SELECT individual_id,
            keycode,
            row_number() OVER (PARTITION BY individual_id
                               ORDER BY don_dt DESC nulls LAST) rec_nbr
     FROM
         (SELECT individual_id,
                 don_dt,
                 keycode
          FROM prod.agg_fundraising_donation
          WHERE nvl(keycode,'0000000000') != '0000000000'
              AND don_amt &gt; 0
              AND don_cd = 'C3'
          /*UNION ALL                      --SD 20171006: Pledges are deprecated
          SELECT
            individual_id,
            pldg_dt don_dt,
            keycode
          FROM mt_fr_pledge
          WHERE keycode is not null
          UNION ALL
          SELECT
            individual_id,
            pldg_dt don_dt,
            keycode
          FROM mt_fr_lt_pledge
          WHERE keycode is not null*/
 ))
WHERE rec_nbr = 2 ;

DROP TABLE IF EXISTS    cr_temp.fundraising_promo_fun_temp;
CREATE TABLE            cr_temp.fundraising_promo_fun_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
select individual_id,
       keycode,
       prom_dt
from prod.agg_promotion
where bus_unt = 'FUN'
  and prom_dt &gt; '31-MAY-2013'
  and individual_id in (select distinct individual_id from prod.agg_fundraising_donation where don_dt &gt; '31-MAY-2013')
  and substring(keycode,2,3) = '032';


DROP TABLE IF EXISTS    cr_temp.fundraising_transaction_temp;
CREATE TABLE            cr_temp.fundraising_transaction_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
select ah.individual_id as individual_id 
,   ah.action_amount    as trn_amt
,   ah.action_date      as trn_dt
,   ft.fnc_code         as fnc_cd
,   ah.action_frequency as trans_freq
,   ah.keycode          as apl_keycd

from prod.action_header ah inner join prod.fundraising_transaction ft on ah.hash_action_id = ft.hash_action_id
where 1=1 and action_type = 'FUNDRAISING';

DROP TABLE IF EXISTS    cr_temp.fundraising_indx_temp;
CREATE TABLE            cr_temp.fundraising_indx_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
select distinct individual_id     as individual_id 
            ,   null              as ind_urn 
            ,   household_id      as hh_id
            ,   household_id      as osl_hh_id
from prod.individual;



DROP TABLE IF EXISTS    cr_temp.fundraising_trans_start_temp;
CREATE TABLE            cr_temp.fundraising_trans_start_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
select    individual_id as individual_id 
        , MAX(trn_dt) fr_ch_status_active_dt
        FROM (
           SELECT
           individual_id,
           trn_dt,
           CASE WHEN LAG(individual_id) OVER (ORDER BY individual_id, trn_dt) = individual_id THEN
              LAG(trn_dt) OVER (ORDER BY individual_id, trn_dt)
           ELSE
              NULL
           END AS prev_dt,
           CASE WHEN LEAD(individual_id) OVER (ORDER BY individual_id, trn_dt) = individual_id THEN
             LEAD(trn_dt) OVER (ORDER BY individual_id, trn_dt)
           ELSE
             NULL
           END AS next_dt
           FROM cr_temp.fundraising_transaction_temp
           WHERE
             trans_freq = 'R'
           ORDER BY individual_id, trn_dt
        ) WHERE (trn_dt &gt;= ADD_MONTHS(prev_dt, 2) OR prev_dt IS NULL)
        AND (trn_dt &gt;= ADD_MONTHS(next_dt, -2) OR next_dt IS NULL)
       GROUP BY individual_id;

DROP TABLE IF EXISTS    cr_temp.fundraising_last_don_dt_temp;
CREATE TABLE            cr_temp.fundraising_last_don_dt_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
select  tft.individual_id
        , MAX(tft.trn_dt) fr_ch_lst_don_dt
        FROM  cr_temp.fundraising_transaction_temp tft
        WHERE tft.trans_freq = 'R'
      GROUP BY tft.individual_id;

DROP TABLE IF EXISTS    cr_temp.fundraising_donation_agg_temp;
CREATE TABLE            cr_temp.fundraising_donation_agg_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT fr.individual_id,
             MAX(case when DON_GROSS_AMT &gt; 0
                       and substring(KEYCODE,2,1) in ('2','3','6')
                      then NVL(TO_CHAR(don_dt,'YYYYMMDD'),'19000101')
                 end) AS DT_LST_RFL_GIFT,
             MAX(case when DON_GROSS_AMT &gt; 0
                       and substring(KEYCODE,2,1) in ('0','1','4','5','7','8','9')
                       and KEYCODE != '0000000000'
                      then NVL(TO_CHAR(don_dt,'YYYYMMDD'),'19000101')
                 end) AS DT_LST_NON_RFL_GIFT,
             (substring(max(case when substring(keycode,2,2) in ('03','06')
              then nvl(to_char(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||don_amt
         end),15)) AS fr_lst_eml_don_amt,
             MAX(case when substring(keycode,2,2) in ('03','06')
                      then don_dt
                 end) AS fr_lst_eml_don_dt,
             (substring(MAX(CASE WHEN    (substring(keycode,2,1) IN ('2','3','5','7','8','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'))
                                            OR (substring(keycode,2,1) = '4' AND substring(keycode,4,1) &lt;&gt; '2')
                                            OR (substring(keycode,2,1) = '4' AND substring(keycode,4,1) = '2' AND don_dt &lt; '1-APR-2008')
                                            OR (substring(keycode,2,1) = '0' AND don_dt &lt; '1-JAN-2002')
                                            OR (substring(keycode,2,1) = '1' AND don_dt &gt;= '1-JUN-2012')
                                       THEN NVL(TO_CHAR(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||don_amt END),15)) fr_lst_dm_don_amt,
             MAX(CASE WHEN    (substring(keycode,2,1) IN ('2','3','5','7','8','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'))
                           OR (substring(keycode,2,1) = '4' AND substring(keycode,4,1) &lt;&gt; '2')
                           OR (substring(keycode,2,1) = '4' AND substring(keycode,4,1) = '2' AND don_dt &lt; '1-APR-2008')
                           OR (substring(keycode,2,1) = '0' AND don_dt &lt; '1-JAN-2002')
                           OR (substring(keycode,2,1) = '1' AND don_dt &gt;= '1-JUN-2012')
                      THEN don_dt END) fr_lst_dm_don_dt,
             (substring(MAX(CASE WHEN substring(keycode,2,2) IN ('02','00')
                                       THEN NVL(TO_CHAR(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||don_amt END),15)) fr_lst_org_onl_don_amt,
             MAX(CASE WHEN substring(keycode,2,2) IN ('02','00')
                      THEN don_dt END) fr_lst_org_onl_don_dt,
             (substring(MAX(CASE WHEN substring(keycode,2,2) = '05' AND don_dt &gt;= '1-JAN-2013'
                                       THEN NVL(TO_CHAR(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||don_amt END),15)) fr_lst_ecomm_don_amt,
             MAX(CASE WHEN substring(keycode,2,2)  = '05' AND don_dt &gt;= '1-JAN-2013'
                      THEN don_dt END) fr_lst_ecomm_don_dt,
             COUNT(CASE WHEN don_dt &gt;= add_months(sysdate,-6) THEN 1 END) fr_1_6_mth_don_cnt,
             COUNT(CASE WHEN don_dt &gt;= add_months(sysdate,-12) AND don_dt &lt; add_months(sysdate,-6) THEN 1 END) fr_7_12_mth_don_cnt,
             COUNT(CASE WHEN don_dt &gt;= add_months(sysdate,-24) AND don_dt &lt; add_months(sysdate,-12) THEN 1 END) fr_13_24_mth_don_cnt,
             COUNT(CASE WHEN don_dt &gt;= add_months(sysdate,-36) AND don_dt &lt; add_months(sysdate,-24) THEN 1 END) fr_25_36_mth_don_cnt,
             COUNT(CASE WHEN don_dt &lt; add_months(sysdate,-36) THEN 1 END) fr_37_plus_mth_don_cnt,
             MAX(CASE WHEN substring(keycode,2,1) = '1' AND don_dt &gt;= '1-JUN-2012'
                      THEN 'Y'
                      ELSE 'N'
                  END)fr_dm_pros_mdl_rsp_flg,
             MIN(CASE WHEN  fr_pr.individual_id IS NOT NULL
                      THEN fr_pr.min_dt END) fr_mbr_basic_fst_dt,
             (substring(MIN(CASE WHEN fr_pr.individual_id IS NOT NULL
                                       THEN NVL(TO_CHAR(fr_pr.min_dt,'YYYYMMDDHH24MISS'),'00000000000000')||fr_pr.min_amt END),15)) fr_mbr_basic_fst_amt,
             MAX(CASE WHEN  fr_pr.individual_id IS NOT NULL
                      THEN fr_pr.max_dt END) fr_mbr_basic_lst_dt,
             (substring(MAX(CASE WHEN fr_pr.individual_id IS NOT NULL
                                       THEN NVL(TO_CHAR(fr_pr.max_dt,'YYYYMMDDHH24MISS'),'00000000000000')||fr_pr.max_amt END),15)) fr_mbr_basic_lst_amt,
             substring(MAX(CASE WHEN  fr_pr.individual_id IS NOT NULL
                                       THEN NVL(TO_CHAR(fr_pr.max_dt,'YYYYMMDDHH24MISS'),'00000000000000')||fr_pr.pr_key END),15) fr_mbr_basic_lst_keycode
      FROM prod.agg_fundraising_donation fr left join 
           (select fr.individual_id,
            substring(MAX(NVL(TO_CHAR(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||fr.keycode),15) pr_key,
            substring(MAX(NVL(TO_CHAR(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||fr.don_amt),15) max_amt,
            substring(MIN(NVL(TO_CHAR(don_dt,'YYYYMMDDHH24MISS'),'00000000000000')||fr.don_amt),15) min_amt,
            min(fr.don_dt) min_dt,
            max(fr.don_dt) max_dt
              from prod.agg_fundraising_donation fr left join cr_temp.fundraising_promo_fun_temp pr on fr.individual_id = pr.individual_id
             where 1=1
               and fr.don_amt &gt; 0
               and fr.don_cd = 'C3'
               and ((substring(fr.keycode,2,1) = '8' AND don_dt &gt; '31-MAY-2009')
               OR   (substring(fr.keycode,2,3) = '032' AND don_dt &gt; '31-MAY-2013')
               OR   (substring(fr.keycode,1,4) = '4062')
               OR   ((substring(fr.keycode,2,2) = '02'
               and    fr.don_dt between pr.prom_dt + 6 and pr.prom_dt + 28)))
               group by fr.individual_id) fr_pr on  fr.individual_id = fr_pr.individual_id
      WHERE  1=1
        AND DON_AMT &gt; 0
        AND don_cd = 'C3'
      GROUP BY fr.individual_id;

DROP TABLE IF EXISTS    cr_temp.fundraising_xogr_status_temp;
CREATE TABLE            cr_temp.fundraising_xogr_status_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT
           io.individual_id,
           CASE WHEN io.fr_ch_status = 'C' THEN 'CANCELLED'
              WHEN io.fr_ch_status = 'A' AND ft.fr_ch_lst_don_dt &gt; (sysdate - 31)
           THEN 'ACTIVE'
              WHEN io.fr_ch_status = 'A' AND ft.fr_ch_lst_don_dt &gt; (sysdate - 121)
           THEN 'SUSPENDED'
              WHEN io.fr_ch_status = 'A' THEN 'EXPIRED' -- &gt;= 122 days
           ELSE 'NONE'
           END fr_ch_status
      FROM
           prod.agg_individual_xographic io  left join 
           (SELECT
                 tft.individual_id,
                 MAX(tft.trn_dt) fr_ch_lst_don_dt
                 FROM cr_temp.fundraising_transaction_temp tft
                 WHERE tft.trans_freq = 'R'
               GROUP BY tft.individual_id
             ) ft on io.individual_id = ft.individual_id;

DROP TABLE IF EXISTS    cr_temp.fundraising_maxtranamt_temp;
CREATE TABLE            cr_temp.fundraising_maxtranamt_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT ft3.individual_id
     , MAX(ft3.trn_amt) as trn_amt_max
FROM cr_temp.fundraising_transaction_temp ft3
INNER JOIN cr_temp.fundraising_last_don_dt_temp ft
ON  ft3.trn_dt            = ft.fr_ch_lst_don_dt
    AND ft3.individual_id = ft.individual_id
WHERE EXISTS (SELECT NULL FROM cr_temp.fundraising_indx_temp ix WHERE ft.individual_id = ix.individual_id)
GROUP BY ft3.individual_id;


DROP TABLE IF EXISTS    cr_temp.fundraising_cnt_anh_temp;
CREATE TABLE            cr_temp.fundraising_cnt_anh_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT
    ft4.individual_id 
    , COUNT(*) as cnt_anh_rows
FROM cr_temp.fundraising_transaction_temp ft4
    inner join cr_temp.fundraising_trans_start_temp fts 
        on ft4.individual_id = fts.individual_id 
            and ft4.trn_dt &gt;= fts.fr_ch_status_active_dt
WHERE exists (select null from cr_temp.fundraising_indx_temp ix where fts.individual_id = ix.individual_id )
    AND ft4.fnc_cd = 'ANH'
    AND ft4.trans_freq = 'R'   
group by ft4.individual_id ;

DROP TABLE IF EXISTS    cr_temp.fundraising_maxdondt_keycd_temp;
CREATE TABLE            cr_temp.fundraising_maxdondt_keycd_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT
    ft5.individual_id
,   MAX(ft5.apl_keycd) as apl_keycd_max
FROM cr_temp.fundraising_transaction_temp ft5 
inner join cr_temp.fundraising_last_don_dt_temp ft 
    on ft5.trn_dt = ft.fr_ch_lst_don_dt and ft5.individual_id = ft.individual_id
where exists (select null from cr_temp.fundraising_indx_temp ix where ft.individual_id = ix.individual_id )
group by ft5.individual_id;


DROP TABLE IF EXISTS    cr_temp.fundraising_ft3ft4ft5_temp;
CREATE TABLE            cr_temp.fundraising_ft3ft4ft5_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
    select distinct
    /*SD: ft4 and ft5 are group by from the same table*/
        ft3.individual_id as individual_id
    ,   ft3.trn_amt_max   as ft3_trn_amt_max
    ,   ft4.cnt_anh_rows  as ft4_cnt_anh_rows
    ,   ft5.apl_keycd_max as ft5_apl_keycd_max
    from cr_temp.fundraising_maxtranamt_temp ft3 
        full join cr_temp.fundraising_cnt_anh_temp ft4 
            on ft3.individual_id = ft4.individual_id
        full join cr_temp.fundraising_maxdondt_keycd_temp ft5
            on ft4.individual_id = ft5.individual_id;


DROP TABLE IF EXISTS    cr_temp.mt_fr_summary_temp;
CREATE TABLE            cr_temp.mt_fr_summary_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
WITH ctda AS
    (SELECT ft.individual_id
      , SUM(ft.trn_amt) fr_ch_curr_ttl_don_amt
    FROM cr_temp.fundraising_transaction_temp ft
    LEFT JOIN cr_temp.fundraising_trans_start_temp fts
    ON  ft.individual_id  = fts.individual_id
    WHERE 1               =1
        AND ft.trans_freq = 'R'
        AND ft.trn_dt    &gt;= fts.fr_ch_status_active_dt
    GROUP BY ft.individual_id
    )
  ,pldg AS
    (SELECT CAST( NULL AS INTEGER) AS individual_id
      , 0 fr_lst_tm_pldg_amt
      , 0 pl_pldg_amt
      , 0 pl_1_6_pldg_amt
      , 0 pl_13_24_pldg_amt
      , 0 pl_25_36_pldg_amt
      , 0 pl_37_pldg_amt
      , 0 pl_7_12_pldg_amt
      , CAST( NULL AS DATE ) fr_lst_tm_pldg_dt
      , CAST( NULL AS DATE ) fr_fst_pldg_dt
      , CAST( NULL AS VARCHAR(10) ) fst_pldg_dt_keycode
      , CAST( NULL AS VARCHAR(10) ) lst_pldg_dt_keycode
      , 0 pl_pldg_cnt
    )
SELECT ix.individual_id
  , ix.ind_urn
  , ix.hh_id
  , dn.fr_avg_don_amt
  , dn.fr_avg_gross_don_amt
  , dn.fr_lst_don_amt
  , dn.fr_ltd_don_amt
  , dn.fr_max_don_amt
  , dn.fr_1_6_mth_don_amt
  , dn.fr_13_24_mth_don_amt
  , dn.fr_25_36_mth_don_amt
  , dn.fr_37_plus_mth_don_amt
  , dn.fr_7_12_mth_don_amt
  , dn.fr_prior_don_amt
  , lt_pl.fr_lst_lt_pldg_amt
  , pldg.fr_lst_tm_pldg_amt
  , 0 fr_ltd_pldg_amt
  , 0 fr_1_6_mth_pldg_amt
  , 0 fr_13_24_mth_pldg_amt
  , 0 fr_25_36_mth_pldg_amt
  , 0 fr_37_plus_mth_pldg_amt
  , 0 fr_7_12_mth_pldg_amt
  , dn.fr_fst_don_dt
  , dn.fr_lst_don_dt
  , lt_pl.fr_lst_lt_pldg_pmt_dt
  , pldg.fr_lst_tm_pldg_dt
  , lt_pl.fr_lst_lt_pldg_dt
  , dn.fr_prior_don_dt
  , nvl2(lt_pl.individual_id,'Y','N') fr_lt_pldg_flg
  , dn.fr_dnr_act_flg
  , dn.fr_dnr_inact_flg
  , dn.fr_dnr_lps_flg
  , CAST(NULL AS VARCHAR(4)) fr_mbr_gvng_lvl_cd
  , CAST(NULL AS DATE) fr_mbr_exp_dt
  , substring(NVL(dn.fst_don_dt_keycode,'99999999'),9) fr_fst_act_keycode
  , substring(NVL(dn.lst_don_dt_keycode,'00000000'),9) fr_lst_act_keycode
  , pr_kc.fr_prior_act_keycode
  , lt_pl.fr_lt_pldg_opn_flg
  , dn.fr_ltd_don_cnt
  , dn.fr_don_ref_cnt
  , 0 fr_ltd_pldg_cnt
  , dn.fr_times_ren_cnt
  , dn.fr_lst_don_src_cd
  , null fr_tm_pldg_opn_flg
  , pldg.fr_fst_pldg_dt
  , lt_pl.fr_fst_lt_pldg_dt
  , dn.fr_lst_rfl_don_amt
  , dn.fr_lst_non_rfl_don_amt
  , CAST(NULL AS DATE) fr_mbr_frst_strt_dt
  , CAST(NULL AS VARCHAR(10)) fr_mbr_lst_keycode
  , CAST(NULL AS INTEGER) fr_mbr_lst_ren_don_amt
  , NVL(dn.fr_tof_cd,'N')     AS fr_tof_cd
  , NVL(dn.fr_lt_dnr_flg,'N') AS fr_lt_dnr_flg
  , CAST(NULL AS INTEGER)     AS fr_mbr_lst_add_don_amt
  , CAST(NULL AS DATE)        AS fr_mbr_lst_add_don_dt
  , CAST(NULL AS DATE)        AS fr_mbr_pres_cir_frst_strt_dt
  , dn.FR_FST_DON_KEYCODE
  , dn.FR_MAX_DON_AMT_12_MTH
  , dn.FR_MAX_DON_AMT_24_MTH
  , dn.FR_MAX_DON_AMT_36_MTH
  , dn.FR_LST_GUARDIAN_DON_DT
  , dn.FR_BRIDGE_PROGRAM_FLG
  , dn.FR_TRACK_NUMBER
  , NVL(dn.FR_CONV_TAG_RSP_FLG,'N') FR_CONV_TAG_RSP_FLG
  , dn.FR_FST_DON_AMT
  , TO_DATE(fd.dt_lst_rfl_gift,'YYYYMMDD')     AS FR_LST_RFL_DON_DT
  , TO_DATE(fd.dt_lst_non_rfl_gift,'YYYYMMDD') AS FR_LST_NON_RFL_DON_DT
  , fd.FR_LST_EML_DON_AMT
  , fd.FR_LST_EML_DON_DT
  , fd.fr_lst_dm_don_amt
  , fd.fr_lst_dm_don_dt
  , fd.fr_lst_org_onl_don_amt
  , fd.fr_lst_org_onl_don_dt
  , fd.fr_lst_ecomm_don_amt
  , fd.fr_lst_ecomm_don_dt
  , fd.fr_1_6_mth_don_cnt
  , fd.fr_7_12_mth_don_cnt
  , fd.fr_13_24_mth_don_cnt
  , fd.fr_25_36_mth_don_cnt
  , fd.fr_37_plus_mth_don_cnt
  , fd.fr_dm_pros_mdl_rsp_flg
  , fd.fr_mbr_basic_fst_dt
  , fd.fr_mbr_basic_fst_amt
  , fd.fr_mbr_basic_lst_dt
  , fd.fr_mbr_basic_lst_amt
  , fd.fr_mbr_basic_lst_keycode
  , fs.fr_ch_status
  , CASE WHEN fs.fr_ch_status = 'ACTIVE'
        THEN ctda.fr_ch_curr_ttl_don_amt
        ELSE NULL
    END fr_ch_curr_ttl_don_amt
  , ft.fr_ch_lst_don_dt
  , CASE WHEN fs.fr_ch_status = 'ACTIVE'
        THEN fts.fr_ch_status_active_dt
        ELSE NULL
    END fr_ch_curr_strt_dt
  , fta.ft3_trn_amt_max fr_ch_lst_don_amt
  , CASE WHEN fs.fr_ch_status = 'ACTIVE'
        THEN fta.ft4_cnt_anh_rows
        ELSE NULL
    END fr_ch_curr_don_cnt
  , fta.ft5_apl_keycd_max AS fr_ch_lst_don_keycd
  , fts.fr_ch_status_active_dt
  , ix.osl_hh_id
FROM cr_temp.fundraising_indx_temp ix 
        left join cr_temp.fundraising_don_agg1_temp         dn 
            on ix.individual_id = dn.individual_id
        left join                                           pldg 
            on ix.individual_id = pldg.individual_id
        left join cr_temp.mt_fs_lt_pldg_temp                lt_pl 
            on ix.individual_id = lt_pl.individual_id
        left join cr_temp.mt_fs_prior_keycode_temp          pr_kc 
            on ix.individual_id = pr_kc.individual_id
        left join cr_temp.fundraising_donation_agg_temp     fd 
            on ix.individual_id = fd.individual_id
        left join prod.agg_individual_xographic             io 
            on ix.individual_id = io.individual_id
        left join cr_temp.fundraising_last_don_dt_temp      ft 
            on ix.individual_id = ft.individual_id
        left join cr_temp.fundraising_trans_start_temp      fts 
            on ix.individual_id = fts.individual_id
        left join                                           ctda 
            on ix.individual_id = ctda.individual_id
        left join cr_temp.fundraising_xogr_status_temp      fs 
            on ix.individual_id = fs.individual_id
        left join cr_temp.fundraising_ft3ft4ft5_temp        fta
            on ix.individual_id = fta.individual_id

WHERE dn.individual_id IS NOT NULL
;


-- ---ADD MEMBERSHIP DATA

-- DEFINE V_WAREHOUSE_SCHEMA = 'WAREHOUSE'
-- DEFINE V_MIDDLE_TIER_SCHEMA = 'MIDDLE_TIER'

-- DECLARE
-- --
-- cursor c_fr_donation is
-- select fs.rowid row_id,
       -- fs.individual_id,
       -- case when fd.don_dt &gt;= to_date('20050601','YYYYMMDD')
              -- then fd.don_dt
       -- end don_dt,
       -- case when fd.don_dt &gt;=  greatest(to_date('20050601','YYYYMMDD'),nvl(pce.qualifying_date,to_date('20050601','YYYYMMDD')) )
              -- then fd.don_amt
       -- end don_amt,
       -- case when fd.don_dt &gt;= to_date('20050601','YYYYMMDD')
              -- then fd.keycode
       -- end keycode,
       -- max(decode(fm.flg,'C',1,0))
         -- over (partition by fs.individual_id) as flg_c_exists,
       -- min(case when fd.don_amt &gt;= 1000 then fd.don_dt end)
         -- over (partition by fs.individual_id) as mbr_pres_cir_frst_strt_dt_tmp,
      -- pce.individual_id pce_individual_id,
      -- pce.qualifying_date pce_qualifying_date,
      -- fs.fr_mbr_gvng_lvl_cd gvng_lvl_cd
-- from &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp fs,
     -- &amp;V_MIDDLE_TIER_SCHEMA..mt_fr_donation fd,
     -- &amp;V_WAREHOUSE_SCHEMA..fr_membership fm,
     -- &amp;V_MIDDLE_TIER_SCHEMA..president_circle_exclude pce
-- where fs.individual_id = fd.individual_id
      -- and fs.individual_id = fm.individual_id (+)
      -- and fs.individual_id = pce.individual_id (+)
      -- and ((fd.don_dt &gt;= to_date('20050601','YYYYMMDD')
           -- and fd.don_cd = 'C3') or (fm.flg = 'C'))
-- order by individual_id, don_dt desc nulls last, keycode;
-- --
-- v_row c_fr_donation%rowtype;
-- --
-- row_count number;
-- ind_id number := 0;
-- v_last_upd_ind_id number :=0;
-- first_rec number := 1;
-- row_id rowid;
-- mbr_pres_cir_frst_strt_dt_tmp date;
-- pce_exclude_flg number := 0;
-- --
-- mbr_gvng_lvl_cd &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_gvng_lvl_cd%type;
-- mbr_exp_dt &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_exp_dt%type;
-- mbr_frst_strt_dt &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_frst_strt_dt%type;
-- mbr_lst_keycode &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_lst_keycode%type;
-- mbr_lst_ren_don_amt &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_lst_ren_don_amt%type;
-- mbr_lst_add_don_amt &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_lst_add_don_amt%type;
-- mbr_lst_add_don_dt &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_lst_add_don_dt%type;
-- mbr_pres_cir_frst_strt_dt &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp.fr_mbr_pres_cir_frst_strt_dt%type;
-- --
-- BEGIN
-- --
-- open c_fr_donation;
-- --
-- &lt;&lt;loop1&gt;&gt;
-- fetch c_fr_donation into v_row;
-- while not c_fr_donation%notfound loop
-- row_count := c_fr_donation%rowcount;
-- if mod(row_count,5000) = 0 then
  -- commit;
-- end if;
-- --
-- if v_row.individual_id != ind_id or first_rec = 1 then
  -- if first_rec = 0 and ind_id!=0 then
    -- update &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp
    -- set  fr_mbr_gvng_lvl_cd = mbr_gvng_lvl_cd,
         -- fr_mbr_exp_dt = mbr_exp_dt,
         -- fr_mbr_frst_strt_dt = mbr_frst_strt_dt,
         -- fr_mbr_lst_keycode = mbr_lst_keycode,
         -- fr_mbr_lst_ren_don_amt = mbr_lst_ren_don_amt,
         -- fr_mbr_lst_add_don_amt = mbr_lst_add_don_amt,
         -- fr_mbr_lst_add_don_dt = mbr_lst_add_don_dt,
         -- fr_mbr_pres_cir_frst_strt_dt = case when mbr_pres_cir_frst_strt_dt is not null
                                             -- then mbr_pres_cir_frst_strt_dt
                                             -- when mbr_gvng_lvl_cd = 'C'
                                             -- then mbr_pres_cir_frst_strt_dt_tmp
                                        -- end
    -- where rowid = row_id;
   -- ind_id:=0;

  -- end if;
  -- if v_row.gvng_lvl_cd = 'C' and  v_row.don_dt &lt;= v_row.pce_qualifying_date then

    -- mbr_gvng_lvl_cd := null;
    -- mbr_exp_dt := to_date('20061231','YYYYMMDD');
    -- mbr_frst_strt_dt := to_date('20050601','YYYYMMDD');
    -- mbr_lst_keycode := null;
    -- mbr_lst_ren_don_amt := null;
    -- mbr_lst_add_don_amt := null;
    -- mbr_lst_add_don_dt := null;
    -- mbr_pres_cir_frst_strt_dt := to_date('20050601','YYYYMMDD');
-- --
    -- row_id := v_row.row_id;
    -- ind_id := v_row.individual_id;
    -- mbr_pres_cir_frst_strt_dt_tmp := v_row.mbr_pres_cir_frst_strt_dt_tmp;
    -- first_rec := 0;
  -- elsif v_row.flg_c_exists = 1 and v_row.pce_individual_id is null then

    -- mbr_gvng_lvl_cd := 'C';
    -- mbr_exp_dt := to_date('20061231','YYYYMMDD');
    -- mbr_frst_strt_dt := to_date('20050601','YYYYMMDD');
    -- mbr_lst_keycode := null;
    -- mbr_lst_ren_don_amt := null;
    -- mbr_lst_add_don_amt := null;
    -- mbr_lst_add_don_dt := null;
    -- mbr_pres_cir_frst_strt_dt := to_date('20050601','YYYYMMDD');
-- --
    -- row_id := v_row.row_id;
    -- ind_id := v_row.individual_id;
    -- mbr_pres_cir_frst_strt_dt_tmp := v_row.mbr_pres_cir_frst_strt_dt_tmp;
    -- first_rec := 0;
  -- elsif v_row.don_amt &gt;= 100 then
    -- mbr_gvng_lvl_cd := case when v_row.don_amt &gt;= 100 and v_row.don_amt &lt; 250
                             -- then 'S'
                           -- when v_row.don_amt &gt;= 250 and v_row.don_amt &lt; 500
                             -- then 'G'
                           -- when v_row.don_amt &gt;= 500 and v_row.don_amt &lt; 1000
                             -- then 'P'
                           -- when v_row.don_amt &gt;= 1000
                             -- then 'C'
                      -- end;
    -- mbr_exp_dt := case when v_row.don_dt &lt;= to_date('20051231','YYYYMMDD')
                        -- then to_date('20061231','YYYYMMDD')
                      -- else last_day(add_months(v_row.don_dt,12))
                  -- end;
    -- mbr_frst_strt_dt := v_row.don_dt;
    -- mbr_lst_keycode := v_row.keycode;
    -- mbr_lst_ren_don_amt := null;
    -- mbr_lst_add_don_amt := null;
    -- mbr_lst_add_don_dt := null;
    -- mbr_pres_cir_frst_strt_dt := null;
-- --
    -- row_id := v_row.row_id;
    -- ind_id := v_row.individual_id;
    -- mbr_pres_cir_frst_strt_dt_tmp := v_row.mbr_pres_cir_frst_strt_dt_tmp;
    -- first_rec := 0;

    -- goto loop1;
  -- else
    -- goto loop1;
  -- end if;
-- end if;
-- --
-- --3a. Renewal
-- if v_row.pce_qualifying_date is null or v_row.don_dt &gt; v_row.pce_qualifying_date then
    -- if v_row.don_dt &lt;= mbr_exp_dt
         -- and ( (mbr_gvng_lvl_cd = 'S' and v_row.don_amt &gt;= 100)
               -- or (mbr_gvng_lvl_cd = 'G' and v_row.don_amt &gt;= 250)
               -- or (mbr_gvng_lvl_cd = 'P' and v_row.don_amt &gt;= 500)
               -- or (mbr_gvng_lvl_cd = 'C' and v_row.don_amt &gt;= 1000) )
         -- and ( (substring(v_row.keycode,2,3) = '414' and v_row.don_dt &lt;= to_date('20061031','YYYYMMDD'))
                -- or (substring(v_row.keycode,2,2) in ('43', '47', '48'))
                -- or (substring(v_row.keycode,2,2) = '17' and v_row.don_dt
                      -- between to_date('20061101','YYYYMMDD') and to_date('20080430','YYYYMMDD')) ) then
      -- mbr_gvng_lvl_cd := case when v_row.don_amt &gt;= 100 and v_row.don_amt &lt; 250
                                 -- then 'S'
                               -- when v_row.don_amt &gt;= 250 and v_row.don_amt &lt; 500
                                 -- then 'G'
                               -- when v_row.don_amt &gt;= 500 and v_row.don_amt &lt; 1000
                                 -- then 'P'
                               -- when v_row.don_amt &gt;= 1000
                                 -- then 'C'
                          -- end;
      -- mbr_exp_dt := last_day(add_months(mbr_exp_dt,12));
      -- mbr_lst_keycode := v_row.keycode;
      -- mbr_lst_ren_don_amt := v_row.don_amt;
    -- --3b. Renewal
    -- elsif v_row.don_dt &gt; add_months(mbr_exp_dt,-6) and v_row.don_dt &lt;= mbr_exp_dt
            -- and (substring(v_row.keycode,2,2) in ('47','48')
                  -- or (substring(v_row.keycode,2,2) = '17' and v_row.don_dt
                      -- between to_date('20061101','YYYYMMDD') and to_date('20080430','YYYYMMDD'))  )
            -- and v_row.don_amt &gt;= 100
            -- and ( (mbr_gvng_lvl_cd = 'G' and v_row.don_amt &lt; 250)
                  -- or (mbr_gvng_lvl_cd = 'P' and v_row.don_amt &lt; 500) ) then
      -- mbr_gvng_lvl_cd := case when v_row.don_amt &gt;= 100 and v_row.don_amt &lt; 250
                                 -- then 'S'
                               -- when v_row.don_amt &gt;= 250 and v_row.don_amt &lt; 500
                                 -- then 'G'
                               -- when v_row.don_amt &gt;= 500 and v_row.don_amt &lt; 1000
                                 -- then 'P'
                               -- when v_row.don_amt &gt;= 1000
                                 -- then 'C'
                          -- end;
      -- mbr_exp_dt := last_day(add_months(mbr_exp_dt,12));
      -- mbr_lst_keycode := v_row.keycode;
      -- mbr_lst_ren_don_amt := v_row.don_amt;
    -- --3c. Renewal
    -- elsif v_row.don_dt &gt; add_months(mbr_exp_dt,-4) and v_row.don_dt &lt;= mbr_exp_dt
          -- and nvl(substring(v_row.keycode,2,1),'X') != '4'
          -- and not (substring(v_row.keycode,2,2) = '17' and v_row.don_dt
                      -- between to_date('20061101','YYYYMMDD') and to_date('20080430','YYYYMMDD'))
          -- and ( (mbr_gvng_lvl_cd = 'S' and v_row.don_amt &gt;= 100)
               -- or (mbr_gvng_lvl_cd = 'G' and v_row.don_amt &gt;= 250)
               -- or (mbr_gvng_lvl_cd = 'P' and v_row.don_amt &gt;= 500)
               -- or (mbr_gvng_lvl_cd = 'C' and v_row.don_amt &gt;= 1000) ) then
      -- mbr_gvng_lvl_cd := case when v_row.don_amt &gt;= 100 and v_row.don_amt &lt; 250
                                 -- then 'S'
                               -- when v_row.don_amt &gt;= 250 and v_row.don_amt &lt; 500
                                 -- then 'G'
                               -- when v_row.don_amt &gt;= 500 and v_row.don_amt &lt; 1000
                                 -- then 'P'
                               -- when v_row.don_amt &gt;= 1000
                                 -- then 'C'
                          -- end;
      -- mbr_exp_dt := last_day(add_months(mbr_exp_dt,12));
      -- mbr_lst_keycode := v_row.keycode;
    -- --3d. Renewal
    -- elsif v_row.don_dt &lt;= mbr_exp_dt
          -- and ( (mbr_gvng_lvl_cd = 'S' and v_row.don_amt &gt;= 250)
                -- or (mbr_gvng_lvl_cd = 'G' and v_row.don_amt &gt;= 500)
                -- or (mbr_gvng_lvl_cd = 'P' and v_row.don_amt &gt;= 1000) ) then

      -- mbr_gvng_lvl_cd := case when v_row.don_amt &gt;= 100 and v_row.don_amt &lt; 250
                                 -- then 'S'
                               -- when v_row.don_amt &gt;= 250 and v_row.don_amt &lt; 500
                                 -- then 'G'
                               -- when v_row.don_amt &gt;= 500 and v_row.don_amt &lt; 1000
                                 -- then 'P'
                               -- when v_row.don_amt &gt;= 1000
                                 -- then 'C'
                          -- end;

      -- mbr_exp_dt := last_day(add_months(mbr_exp_dt,12));
      -- mbr_lst_keycode := v_row.keycode;
      -- mbr_lst_ren_don_amt := case when (substring(v_row.keycode,2,3) = '414'
                                          -- and v_row.don_dt &lt;= to_date('20061031','YYYYMMDD'))
                                       -- or (substring(v_row.keycode,2,2) in ('43','47','48'))
                                       -- or (substring(v_row.keycode,2,2) = '17' and v_row.don_dt
                                             -- between to_date('20061101','YYYYMMDD') and to_date('20080430','YYYYMMDD'))
                                   -- then v_row.don_amt
                                 -- else
                                   -- mbr_lst_ren_don_amt
                            -- end;
    -- elsif v_row.don_dt &gt; mbr_exp_dt
          -- and v_row.don_amt &gt;= 100
          -- and ( (mbr_gvng_lvl_cd = 'C' and v_row.don_amt &gt;= 1000)
                -- or mbr_gvng_lvl_cd != 'C') then


      -- mbr_gvng_lvl_cd := case when v_row.don_amt &gt;= 100 and v_row.don_amt &lt; 250
                                 -- then 'S'
                               -- when v_row.don_amt &gt;= 250 and v_row.don_amt &lt; 500
                                 -- then 'G'
                               -- when v_row.don_amt &gt;= 500 and v_row.don_amt &lt; 1000
                                 -- then 'P'
                               -- when v_row.don_amt &gt;= 1000
                                 -- then 'C'
                          -- end;

      -- mbr_exp_dt := last_day(add_months(v_row.don_dt,12));
      -- mbr_lst_keycode := v_row.keycode;
    -- elsif v_row.don_amt &gt; 0 and nvl(substring(v_row.keycode,2,1),'X') not in ('2','3') then
      -- mbr_lst_add_don_amt := v_row.don_amt;
      -- mbr_lst_add_don_dt := v_row.don_dt;
    -- end if;
-- end if;
-- --
-- fetch c_fr_donation into v_row;
-- --
-- end loop;
-- --
-- if first_rec = 0 and ind_id!=0 then
  -- update &amp;V_MIDDLE_TIER_SCHEMA..cr_temp.mt_fr_summary_temp
  -- set  fr_mbr_gvng_lvl_cd = mbr_gvng_lvl_cd,
       -- fr_mbr_exp_dt = mbr_exp_dt,
       -- fr_mbr_frst_strt_dt = mbr_frst_strt_dt,
       -- fr_mbr_lst_keycode = mbr_lst_keycode,
       -- fr_mbr_lst_ren_don_amt = mbr_lst_ren_don_amt,
       -- fr_mbr_lst_add_don_amt = mbr_lst_add_don_amt,
       -- fr_mbr_lst_add_don_dt = mbr_lst_add_don_dt,
       -- fr_mbr_pres_cir_frst_strt_dt = mbr_pres_cir_frst_strt_dt
  -- where rowid = row_id;
-- end if;
-- --
-- commit;
-- --
-- close c_fr_donation;
-- --
-- END;

DROP TABLE IF EXISTS    cr_temp.fr_sum_basic_temp;
CREATE TABLE            cr_temp.fr_sum_basic_temp
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT individual_id
  , CASE WHEN substring(fr_mbr_basic_lst_keycode,2,2) NOT   IN ('88')
            AND substring(fr_mbr_basic_lst_keycode,1,4) NOT IN ('6808')
            AND TO_CHAR(fr_mbr_basic_lst_dt,'MM')           IN ('01','02','03','04','05','06','07','08','09')
        THEN CAST(DECODE(TO_CHAR(fr_mbr_basic_lst_dt,'YYYYMMDD'),NULL, NULL , to_date(TO_CHAR(fr_mbr_basic_lst_dt,'YYYY')||'0831','YYYYMMDD')) AS
            DATE)
        ELSE CAST(DECODE(TO_CHAR(fr_mbr_basic_lst_dt,'YYYYMMDD'),NULL, NULL , to_date(TO_CHAR(fr_mbr_basic_lst_dt + 365,'YYYY')||'0831','YYYYMMDD'))
            AS DATE)
    END AS fr_mbr_basic_exp_dt
FROM cr_temp.mt_fr_summary_temp;


DROP TABLE IF EXISTS    cr_temp.agg_fundraising_summary;
CREATE TABLE            cr_temp.agg_fundraising_summary
    DISTKEY(individual_id)
    sortkey(individual_id)
AS
SELECT fr.individual_id
  , -- fr.ind_urn
  , fr.hh_id
  , NVL(fr.fr_avg_don_amt,'0')          AS fr_avg_don_amt
  , NVL(fr.fr_avg_gross_don_amt,'0')    AS fr_avg_gross_don_amt
  , NVL(fr.fr_lst_don_amt,'0')          AS fr_lst_don_amt
  , NVL(fr.fr_ltd_don_amt,'0')          AS fr_ltd_don_amt
  , NVL(fr.fr_max_don_amt,'0')          AS fr_max_don_amt
  , NVL(fr.fr_1_6_mth_don_amt,'0')      AS fr_1_6_mth_don_amt
  , NVL(fr.fr_13_24_mth_don_amt,'0')    AS fr_13_24_mth_don_amt
  , NVL(fr.fr_25_36_mth_don_amt,'0')    AS fr_25_36_mth_don_amt
  , NVL(fr.fr_37_plus_mth_don_amt,'0')  AS fr_37_plus_mth_don_amt
  , NVL(fr.fr_7_12_mth_don_amt,'0')     AS fr_7_12_mth_don_amt
  , NVL(fr.fr_prior_don_amt,'0')        AS fr_prior_don_amt
  , NVL(fr.fr_lst_lt_pldg_amt,'0')      AS fr_lst_lt_pldg_amt
  , NVL(fr.fr_lst_tm_pldg_amt,'0')      AS fr_lst_tm_pldg_amt
  , NVL(fr.fr_ltd_pldg_amt,'0')         AS fr_ltd_pldg_amt
  , NVL(fr.fr_1_6_mth_pldg_amt,'0')     AS fr_1_6_mth_pldg_amt
  , NVL(fr.fr_13_24_mth_pldg_amt,'0')   AS fr_13_24_mth_pldg_amt
  , NVL(fr.fr_25_36_mth_pldg_amt,'0')   AS fr_25_36_mth_pldg_amt
  , NVL(fr.fr_37_plus_mth_pldg_amt,'0') AS fr_37_plus_mth_pldg_amt
  , NVL(fr.fr_7_12_mth_pldg_amt,'0')    AS fr_7_12_mth_pldg_amt
  , fr.fr_fst_don_dt
  , fr.fr_lst_don_dt
  , fr.fr_lst_lt_pldg_pmt_dt
  , fr.fr_lst_tm_pldg_dt
  , fr.fr_lst_lt_pldg_dt
  , fr.fr_prior_don_dt
  , fr.fr_lt_pldg_flg
  , fr.fr_dnr_act_flg
  , fr.fr_dnr_inact_flg
  , fr.fr_dnr_lps_flg
  , fr.fr_mbr_gvng_lvl_cd
  , fr.fr_mbr_exp_dt
  , fr.fr_fst_act_keycode
  , fr.fr_lst_act_keycode
  , fr.fr_prior_act_keycode
  , fr.fr_lt_pldg_opn_flg
  , NVL(fr.fr_ltd_don_cnt,'0')          AS fr_ltd_don_cnt
  , NVL(fr.fr_don_ref_cnt,'0')          AS fr_don_ref_cnt
  , NVL(fr.fr_ltd_pldg_cnt,'0')         AS fr_ltd_pldg_cnt
  , NVL(fr.fr_times_ren_cnt,'0')        AS fr_times_ren_cnt
  , fr.fr_lst_don_src_cd
  , fr.fr_tm_pldg_opn_flg
  , fr.fr_fst_pldg_dt
  , fr.fr_fst_lt_pldg_dt
  , NVL(fr.fr_lst_rfl_don_amt,'0')      AS fr_lst_rfl_don_amt
  , NVL(fr.fr_lst_non_rfl_don_amt,'0')  AS fr_lst_non_rfl_don_amt
  , fr.fr_mbr_frst_strt_dt
  , fr.fr_mbr_lst_keycode
  , NVL(fr.fr_mbr_lst_ren_don_amt,'0')  AS fr_mbr_lst_ren_don_amt
  , fr.fr_tof_cd
  , fr.fr_lt_dnr_flg
  , NVL(fr.fr_mbr_lst_add_don_amt,'0')  AS fr_mbr_lst_add_don_amt
  , fr.fr_mbr_lst_add_don_dt
  , fr.fr_mbr_pres_cir_frst_strt_dt
  , fr.FR_FST_DON_KEYCODE
  , fr.FR_MAX_DON_AMT_12_MTH
  , fr.FR_MAX_DON_AMT_24_MTH
  , fr.FR_MAX_DON_AMT_36_MTH
  , fr.FR_LST_GUARDIAN_DON_DT
  , fr.FR_BRIDGE_PROGRAM_FLG
  , fr.FR_TRACK_NUMBER
  , fr.FR_CONV_TAG_RSP_FLG
  , fr.FR_FST_DON_AMT
  , fr.FR_LST_RFL_DON_DT
  , fr.FR_LST_NON_RFL_DON_DT
  , fr.FR_LST_EML_DON_AMT
  , fr.FR_LST_EML_DON_DT
  , CASE WHEN ind.ind_fst_rel_dt   &gt;= '3-JAN-2013'
            AND ind.ind_fst_rel_dt  &lt; fr.fr_fst_don_dt
            AND fr.fr_fst_don_dt   &gt;= '3-JAN-2013'
            AND fr.fr_mbr_pres_cir_frst_strt_dt IS NULL
        THEN 'Y'
        ELSE 'N'
    END                                 AS FR_COOP_ELIGIBLE_FLG
  , NVL(fr.fr_lst_dm_don_amt,'0')       AS fr_lst_dm_don_amt
  , fr.fr_lst_dm_don_dt
  , NVL(fr.fr_lst_org_onl_don_amt,'0')  AS fr_lst_org_onl_don_amt
  , fr.fr_lst_org_onl_don_dt
  , NVL(fr.fr_lst_ecomm_don_amt,'0')    AS fr_lst_ecomm_don_amt
  , fr.fr_lst_ecomm_don_dt
  , NVL(fr.fr_1_6_mth_don_cnt,'0')      AS fr_1_6_mth_don_cnt
  , NVL(fr.fr_7_12_mth_don_cnt,'0')     AS fr_7_12_mth_don_cnt
  , NVL(fr.fr_13_24_mth_don_cnt,'0')    AS fr_13_24_mth_don_cnt
  , NVL(fr.fr_25_36_mth_don_cnt,'0')    AS fr_25_36_mth_don_cnt
  , NVL(fr.fr_37_plus_mth_don_cnt,'0')  AS fr_37_plus_mth_don_cnt
  , fr.fr_dm_pros_mdl_rsp_flg
  , CASE         WHEN fr.fr_mbr_gvng_lvl_cd   = 'C'
        THEN 'C' WHEN fr.fr_mbr_gvng_lvl_cd  IN ('S','G','P')
            AND fr.fr_mbr_exp_dt             &gt;= ADD_MONTHS(sysdate,-24)
        THEN 'L' WHEN CAST(tmp.fr_mbr_basic_exp_dt AS DATE) &gt;= sysdate
        THEN 'B'
        ELSE 'N'
    END fr_mbr_comb_level
  , CASE                                        WHEN fr.fr_mbr_gvng_lvl_cd  = 'C'
        THEN TO_DATE('01/01/2050','MM/DD/YYYY') WHEN fr.fr_mbr_gvng_lvl_cd  IN ('S','G','P')
            AND fr.fr_mbr_exp_dt  &gt;= ADD_MONTHS(sysdate,-24)
        THEN ADD_MONTHS(fr.fr_mbr_exp_dt,24)
        ELSE CAST(tmp.fr_mbr_basic_exp_dt AS DATE)
    END fr_mbr_comb_exp_dt
  , fr.fr_mbr_basic_fst_dt
  , NVL(fr.fr_mbr_basic_fst_amt,'0')    AS fr_mbr_basic_fst_amt
  , fr.fr_mbr_basic_lst_dt
  , NVL(fr.fr_mbr_basic_lst_amt,'0')    AS fr_mbr_basic_lst_amt
  , fr.fr_ch_status
  , NVL(fr.fr_ch_curr_ttl_don_amt,'0')  AS fr_ch_curr_ttl_don_amt
  , fr.fr_ch_lst_don_dt
  , fr.fr_ch_curr_strt_dt
  , NVL(fr.fr_ch_lst_don_amt,'0')       AS fr_ch_lst_don_amt
  , NVL(fr.fr_ch_curr_don_cnt,'0')      AS fr_ch_curr_don_cnt
  , fr.fr_ch_lst_don_keycd
  , fr.fr_ch_status_active_dt
  , tmp.fr_mbr_basic_exp_dt
  , fr.fr_mbr_basic_lst_keycode
  , fr.osl_hh_id
FROM cr_temp.mt_fr_summary_temp fr
    LEFT JOIN cr_temp.fr_sum_basic_temp tmp
        ON  fr.individual_id = tmp.individual_id
    LEFT JOIN prod.agg_individual ind
        ON  fr.individual_id = ind.individual_id;
</SQL>
    <Name>Tab 8</Name>
  </Query>
</QuerySet>